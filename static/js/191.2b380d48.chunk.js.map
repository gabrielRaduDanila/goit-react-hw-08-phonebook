{"version":3,"file":"static/js/191.2b380d48.chunk.js","mappings":"gNAgCA,IA1BqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKC,UAAU,oBAAf,UACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,QACNC,SAAUR,EACVS,OACE,SAAC,KAAD,CACEC,KAAK,UACLC,QAAS,WACPR,GAASS,EAAAA,EAAAA,OACTd,GAAU,EACX,EALH,SAMC,eAOV,C,8CCdD,IAfuB,WACrB,OACE,gBAAKO,UAAU,oBAAf,UACE,SAAC,KAAD,CACEQ,OAAO,MACPC,MAAM,MACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,aAIhB,C,4FCfD,EAAuB,uB,uCCmCvB,EA7BiB,WACf,OAA6BC,EAAAA,EAAAA,KAArBC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,KACpB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UACjB,OACE,4BACGJ,GACC,yBACGC,EAAKI,KAAK,0CAAwC,KACnD,SAAC,KAAD,CAAMC,GAAG,YAAT,UACE,iBAAMtB,UAAWuB,EAAjB,SAA2B,mBAI/B,yBAAG,gBACa,KACd,SAAC,KAAD,CAAMD,GAAG,SAAStB,UAAWuB,EAA7B,SAAuC,WAE/B,IAAI,KACT,KACH,SAAC,KAAD,CAAMvB,UAAWuB,EAAUD,GAAG,YAA9B,SAA0C,aAElC,OAGXH,IAAW,SAACK,EAAA,EAAD,IACXJ,IAAa,SAACK,EAAA,EAAD,MAGnB,C,+EChCYP,EAAqB,WAIhC,MAAO,CACLC,SAJcvB,EAAAA,EAAAA,IAAY8B,EAAAA,IAK1BN,WAJgBxB,EAAAA,EAAAA,IAAY+B,EAAAA,IAM/B,C","sources":["components/error-message/ErrorMessage.js","components/loading-spinner/LoadingSpinner.js","webpack://react-homework-template/./src/components/pages/home-page/HomePage.module.css?b0f9","components/pages/home-page/HomePage.js","hooks/useLoadingAndError.js"],"sourcesContent":["import { Button, Result } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectErrorMessage } from 'features/auth/selectors';\nimport { resetError } from 'features/auth/authSlice';\n\nconst ErrorMessage = () => {\n  const navigate = useNavigate();\n  const errorMessage = useSelector(selectErrorMessage);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"loading-container\">\n      <Result\n        status=\"404\"\n        title=\"ERROR\"\n        subTitle={errorMessage}\n        extra={\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              dispatch(resetError());\n              navigate(-1);\n            }}\n          >\n            Go Back\n          </Button>\n        }\n      />\n    </div>\n  );\n};\nexport default ErrorMessage;\n","import { ProgressBar } from 'react-loader-spinner';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"loading-container\">\n      <ProgressBar\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#F4442E\"\n        barColor=\"#51E5FF\"\n      />\n    </div>\n  );\n};\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"HomePage_link__AfUgc\"};","import { useAuth } from 'hooks';\nimport { Link } from 'react-router-dom';\nimport css from './HomePage.module.css';\nimport { useLoadingAndError } from 'hooks/useLoadingAndError';\nimport ErrorMessage from 'components/error-message/ErrorMessage';\nimport LoadingSpinner from 'components/loading-spinner/LoadingSpinner';\n\nconst HomePage = () => {\n  const { isLoggedIn, user } = useAuth();\n  const { isError, isLoading } = useLoadingAndError();\n  return (\n    <main>\n      {isLoggedIn ? (\n        <p>\n          {user.name}, to see the list of contacts go to the{' '}\n          <Link to=\"/contacts\">\n            <span className={css.link}>contacts</span>\n          </Link>\n        </p>\n      ) : (\n        <p>\n          hello, please{' '}\n          <Link to=\"/login\" className={css.link}>\n            log in\n          </Link>{' '}\n          or{' '}\n          <Link className={css.link} to=\"/register\">\n            register\n          </Link>{' '}\n        </p>\n      )}\n      {isError && <ErrorMessage />}\n      {isLoading && <LoadingSpinner />}\n    </main>\n  );\n};\nexport default HomePage;\n","import { useSelector } from 'react-redux';\nimport { selectIsError, selectIsLoading } from 'features/auth/selectors';\n\nexport const useLoadingAndError = () => {\n  const isError = useSelector(selectIsError);\n  const isLoading = useSelector(selectIsLoading);\n\n  return {\n    isError,\n    isLoading,\n  };\n};\n"],"names":["navigate","useNavigate","errorMessage","useSelector","selectErrorMessage","dispatch","useDispatch","className","status","title","subTitle","extra","type","onClick","resetError","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","useAuth","isLoggedIn","user","useLoadingAndError","isError","isLoading","name","to","css","ErrorMessage","LoadingSpinner","selectIsError","selectIsLoading"],"sourceRoot":""}