{"version":3,"file":"static/js/980.d6289785.chunk.js","mappings":"yOAuEA,EAjEmB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,UACZC,GAAcD,EAAAA,EAAAA,UAqCpB,OACE,0BACE,kBAAME,SArCW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAON,EAAUO,QAAQC,MACzBC,EAASP,EAAYK,QAAQC,MAKnC,IAFE,wHAC8BE,KAAKJ,IACjBA,EAAKK,OAAS,EAChCC,MAAMZ,EAAUO,QAAQM,WAD1B,CAMA,IAFsB,gBACYH,KAAKD,IACjBA,EAAOE,OAAS,EACpCC,MAAMV,EAAYK,QAAQM,WAD5B,CAIA,GAAIlB,EAAU,CACZ,IAAMmB,EAAcnB,EAASoB,MAAK,SAAAC,GAAI,OAAIA,EAAKV,OAASA,CAAlB,IACtC,GAAIQ,EAEF,YADAF,MAAM,GAAD,OAAIE,EAAYR,KAAhB,2BAGR,CAED,IAAMW,EAAS,CACbX,KAAMA,EACNG,OAAQA,GAGVX,GAASoB,EAAAA,EAAAA,IAAcD,IACvBb,EAAEe,OAAOC,OAfR,CANA,CAsBF,EAIiCC,UAAU,gBAAxC,WACE,kBAAOC,QAAQ,OAAf,SAAsB,UACtB,kBACEC,KAAK,OACLjB,KAAK,OACLO,MAAM,yIACNW,UAAQ,EACRC,IAAKzB,KAEP,kBAAOsB,QAAQ,SAAf,SAAwB,YACxB,kBACEC,KAAK,MACLjB,KAAK,SACLO,MAAM,+FACNW,UAAQ,EACRC,IAAKvB,KAEP,mBAAQqB,KAAK,SAAb,SAAsB,oBAI7B,E,oBC3DKG,GAAQC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACbC,GAAYD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACjBE,GAASF,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACdG,GAAcH,EAAAA,EAAAA,OAAK,kBAAM,qDAAN,IACnBI,GAAeJ,EAAAA,EAAAA,OAAK,kBACxB,8DADwB,IAGpBK,GAAiBL,EAAAA,EAAAA,OAAK,kBAC1B,6BAD0B,IA6B5B,EAzBiB,WACf,IAAM7B,GAAWC,EAAAA,EAAAA,OACjBkC,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,IACJ,IAAMH,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBsC,GAASvC,EAAAA,EAAAA,IAAYwC,EAAAA,IAC3B,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UAEjB,GAA6BC,EAAAA,EAAAA,KAArBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAChB,OACE,kBAAMrB,UAAU,gBAAhB,WACE,SAAC,EAAD,IACC1B,EAASgB,OAAS,IAAK,SAACmB,EAAD,IACvBnC,EAASgB,OAAS,IAAK,SAACkB,EAAD,IACvBY,GAAuB,WAAbC,IAAyB,SAAChB,EAAD,IACnCe,GAAuB,SAAbC,IAAuB,SAACd,EAAD,IACjCO,GAA8B,IAApBxC,EAASgB,QAAkC,IAAlBwB,EAAOxB,SACzC,wBAAI,iCAEL2B,IAAW,SAACP,EAAD,IACXQ,IAAa,SAACP,EAAD,MAGnB,C,+EC3CYK,EAAqB,WAIhC,MAAO,CACLC,SAJc1C,EAAAA,EAAAA,IAAY+C,EAAAA,IAK1BJ,WAJgB3C,EAAAA,EAAAA,IAAYgD,EAAAA,IAM/B,C,qECXYC,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAMN,MAAhB,EAEpBO,EAAoB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,WAAhB,EAEzBC,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,EAAhB,EAEhBC,EAAiB,SAAAN,GAAK,OAAIA,EAAMC,MAAML,QAAhB,ECEtBF,EAAW,WAMtB,MAAO,CAAEC,QALM7C,EAAAA,EAAAA,IAAYiD,GAKVI,aAJGrD,EAAAA,EAAAA,IAAYoD,GAIFG,IAHnBvD,EAAAA,EAAAA,IAAYsD,GAGWR,UAFjB9C,EAAAA,EAAAA,IAAYwD,GAG9B,C","sources":["components/add-contact/AddContact.js","components/pages/contacts/Contacts.js","hooks/useLoadingAndError.js","features/modal/selectors.js","hooks/useModal.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'features/auth/selectors';\nimport './addContact.css';\nimport { addNewContact } from 'features/auth/operations';\n\nconst AddContact = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const nameInput = useRef();\n  const numberInput = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = nameInput.current.value;\n    const number = numberInput.current.value;\n\n    const namePattern =\n      /^[a-zA-Zа-яА-Я]+([' -]?[a-zA-Zа-яА-Я ]?[a-zA-Zа-яА-Я]*)*$/;\n    const isNameValid = namePattern.test(name);\n    if (!isNameValid && name.length > 0) {\n      alert(nameInput.current.title);\n      return;\n    }\n    const numberPattern = /^\\+?[\\d\\s-]+$/;\n    let isNumberValid = numberPattern.test(number);\n    if (!isNumberValid && number.length > 0) {\n      alert(numberInput.current.title);\n      return;\n    }\n    if (contacts) {\n      const matchPerson = contacts.find(pers => pers.name === name);\n      if (matchPerson) {\n        alert(`${matchPerson.name} is already in contacts`);\n        return;\n      }\n    }\n\n    const person = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addNewContact(person));\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"phonebookForm\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          ref={nameInput}\n        />\n        <label htmlFor=\"number\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          ref={numberInput}\n        />\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    </div>\n  );\n};\nexport default AddContact;\n","import './contacts.css';\nimport AddContact from 'components/add-contact/AddContact';\nimport { selectContacts } from 'features/auth/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useModal } from 'hooks/useModal';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'features/auth/operations';\nimport { selectFilter } from 'features/auth/selectors';\nimport { useLoadingAndError } from 'hooks/useLoadingAndError';\nimport { lazy } from 'react';\n\nconst Modal = lazy(() => import('components/modal/Modal'));\nconst EditModal = lazy(() => import('components/modal/EditModal'));\nconst Filter = lazy(() => import('components/filter/Filter'));\nconst ContactList = lazy(() => import('components/contacts-list/ContactsList'));\nconst ErrorMessage = lazy(() =>\n  import('components/error-message/ErrorMessage')\n);\nconst LoadingSpinner = lazy(() =>\n  import('components/loading-spinner/LoadingSpinner')\n);\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const { isError, isLoading } = useLoadingAndError();\n\n  const { isOpen, modalFor } = useModal();\n  return (\n    <main className=\"contacts-main\">\n      <AddContact />\n      {contacts.length > 0 && <ContactList />}\n      {contacts.length > 1 && <Filter />}\n      {isOpen && modalFor === 'delete' && <Modal />}\n      {isOpen && modalFor === 'edit' && <EditModal />}\n      {filter && contacts.length === 0 && filter.length === 0 && (\n        <h3>Add contacts to be displayed</h3>\n      )}\n      {isError && <ErrorMessage />}\n      {isLoading && <LoadingSpinner />}\n    </main>\n  );\n};\nexport default Contacts;\n","import { useSelector } from 'react-redux';\nimport { selectIsError, selectIsLoading } from 'features/auth/selectors';\n\nexport const useLoadingAndError = () => {\n  const isError = useSelector(selectIsError);\n  const isLoading = useSelector(selectIsLoading);\n\n  return {\n    isError,\n    isLoading,\n  };\n};\n","export const selectIsOpen = state => state.modal.isOpen;\n\nexport const selectContactName = state => state.modal.contactName;\n\nexport const selectId = state => state.modal.id;\n\nexport const selectModalFor = state => state.modal.modalFor;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsOpen,\n  selectContactName,\n  selectId,\n  selectModalFor,\n} from 'features/modal/selectors';\n\nexport const useModal = () => {\n  const isOpen = useSelector(selectIsOpen);\n  const contactName = useSelector(selectContactName);\n  const id = useSelector(selectId);\n  const modalFor = useSelector(selectModalFor);\n\n  return { isOpen, contactName, id, modalFor };\n};\n"],"names":["contacts","useSelector","selectContacts","dispatch","useDispatch","nameInput","useRef","numberInput","onSubmit","e","preventDefault","name","current","value","number","test","length","alert","title","matchPerson","find","pers","person","addNewContact","target","reset","className","htmlFor","type","required","ref","Modal","lazy","EditModal","Filter","ContactList","ErrorMessage","LoadingSpinner","useEffect","fetchContacts","filter","selectFilter","useLoadingAndError","isError","isLoading","useModal","isOpen","modalFor","selectIsError","selectIsLoading","selectIsOpen","state","modal","selectContactName","contactName","selectId","id","selectModalFor"],"sourceRoot":""}