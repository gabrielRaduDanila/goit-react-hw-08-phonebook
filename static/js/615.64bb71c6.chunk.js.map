{"version":3,"file":"static/js/615.64bb71c6.chunk.js","mappings":"uQAaMA,GAAgBC,EAAAA,EAAAA,OAAK,kBACzB,qDADyB,IAwE3B,EA5DoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAoBP,EAdC,SAACH,EAAUG,GACtC,IAAMQ,EAAYR,EAAOS,cAIzB,OAHuBZ,EAASG,QAAO,SAAAU,GACrC,OAAOA,EAAQC,KAAKF,cAAcG,SAASJ,EAC5C,GAEF,CASKK,CAAqBhB,EAAUG,GAC/BH,EAEJ,OAAOG,GACLA,EAAOc,OAAS,GACa,IAA7BP,EAAkBO,QAClBT,GACA,SAACV,EAAD,CAAeW,iBAAkBA,KAEjC,iBAAKS,UAAU,mBAAf,WACE,wBAAI,cACJ,eAAIA,UAAU,gBAAd,SACGR,EAAkBS,KAAI,SAAAN,GACrB,IAAMO,EAAYP,EAAQQ,GAC1B,OACE,gBAAoBH,UAAU,UAA9B,WACE,0BACE,4BAAOI,EAAeT,EAAQC,MAAM,QACnCD,EAAQU,WAEX,iBAAKL,UAAU,iBAAf,WACE,mBACEM,KAAK,SACLN,UAAU,gBACVO,QAAS,WACPpB,GAASqB,EAAAA,EAAAA,IAAM,CAAEL,GAAID,KACrBf,GAASsB,EAAAA,EAAAA,IAAQ,CAAEb,KAAMD,EAAQC,QACjCT,GAASuB,EAAAA,EAAAA,IAAY,CAAEC,SAAU,YACjCxB,GAASyB,EAAAA,EAAAA,MACV,EARH,UAUE,SAAC,MAAD,CAAcZ,UAAU,mBAE1B,mBACEM,KAAK,SACLN,UAAU,cACVO,QAAS,WACPpB,GAASqB,EAAAA,EAAAA,IAAM,CAAEL,GAAID,KACrBf,GAASsB,EAAAA,EAAAA,IAAQ,CAAEb,KAAMD,EAAQC,QACjCT,GAASuB,EAAAA,EAAAA,IAAY,CAAEC,SAAU,UACjCxB,GAASyB,EAAAA,EAAAA,MACV,EARH,UAUE,SAAC,MAAD,CAASZ,UAAU,uBA5BhBE,EAiCZ,QAIR,EAGD,SAASE,EAAeR,GAMtB,OALcA,EAAKiB,MAAM,QACMZ,KAC7B,SAAAa,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,EAA9C,IAEmCC,KAAK,IAE/C,C","sources":["components/contacts-list/ContactsList.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport './ContactList.css';\nimport {\n  openModal,\n  setId,\n  setName,\n  setModalFor,\n} from 'features/modal/modalSlice';\nimport { selectContacts, selectFilter } from 'features/auth/selectors';\nimport { FiEdit2 } from 'react-icons/fi';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { useState } from 'react';\nimport { lazy } from 'react';\nconst NoResultFound = lazy(() =>\n  import('components/no-result-found/NoResultFound')\n);\n\nconst findFilteredContacts = (contacts, filter) => {\n  const typedName = filter.toLowerCase();\n  const filterdContact = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(typedName);\n  });\n  return filterdContact;\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const [closeNoResult, setCloseNoResult] = useState(true);\n\n  const contactsToDisplay = filter\n    ? findFilteredContacts(contacts, filter)\n    : contacts;\n\n  return filter &&\n    filter.length > 0 &&\n    contactsToDisplay.length === 0 &&\n    closeNoResult ? (\n    <NoResultFound setCloseNoResult={setCloseNoResult} />\n  ) : (\n    <div className=\"display-contacts\">\n      <h2>Contacts</h2>\n      <ul className=\"contacts-list\">\n        {contactsToDisplay.map(contact => {\n          const contactId = contact.id;\n          return (\n            <li key={contactId} className=\"contact\">\n              <p>\n                <span>{capitalizeName(contact.name)}: </span>\n                {contact.number}\n              </p>\n              <div className=\"btns-container\">\n                <button\n                  type=\"button\"\n                  className=\"remove-button\"\n                  onClick={() => {\n                    dispatch(setId({ id: contactId }));\n                    dispatch(setName({ name: contact.name }));\n                    dispatch(setModalFor({ modalFor: 'delete' }));\n                    dispatch(openModal());\n                  }}\n                >\n                  <AiFillDelete className=\"delete-icon\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"edit-button\"\n                  onClick={() => {\n                    dispatch(setId({ id: contactId }));\n                    dispatch(setName({ name: contact.name }));\n                    dispatch(setModalFor({ modalFor: 'edit' }));\n                    dispatch(openModal());\n                  }}\n                >\n                  <FiEdit2 className=\"delete-icon\" />\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default ContactList;\n\nfunction capitalizeName(name) {\n  const words = name.split(/[ -]/);\n  const capitalizedWords = words.map(\n    word => word.charAt(0).toUpperCase() + word.slice(1)\n  );\n  const capitalizedName = capitalizedWords.join(' ');\n  return capitalizedName;\n}\n"],"names":["NoResultFound","lazy","contacts","useSelector","selectContacts","filter","selectFilter","dispatch","useDispatch","useState","closeNoResult","setCloseNoResult","contactsToDisplay","typedName","toLowerCase","contact","name","includes","findFilteredContacts","length","className","map","contactId","id","capitalizeName","number","type","onClick","setId","setName","setModalFor","modalFor","openModal","split","word","charAt","toUpperCase","slice","join"],"sourceRoot":""}